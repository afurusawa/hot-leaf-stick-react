/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as CollectionIndexImport } from './routes/collection/index'
import { Route as CollectionAddCigarImport } from './routes/collection/addCigar'
import { Route as AdminCigarsImport } from './routes/admin/cigars'
import { Route as AdminBrandsImport } from './routes/admin/brands'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const CollectionIndexRoute = CollectionIndexImport.update({
  id: '/collection/',
  path: '/collection/',
  getParentRoute: () => rootRoute,
} as any)

const CollectionAddCigarRoute = CollectionAddCigarImport.update({
  id: '/collection/addCigar',
  path: '/collection/addCigar',
  getParentRoute: () => rootRoute,
} as any)

const AdminCigarsRoute = AdminCigarsImport.update({
  id: '/admin/cigars',
  path: '/admin/cigars',
  getParentRoute: () => rootRoute,
} as any)

const AdminBrandsRoute = AdminBrandsImport.update({
  id: '/admin/brands',
  path: '/admin/brands',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/brands': {
      id: '/admin/brands'
      path: '/admin/brands'
      fullPath: '/admin/brands'
      preLoaderRoute: typeof AdminBrandsImport
      parentRoute: typeof rootRoute
    }
    '/admin/cigars': {
      id: '/admin/cigars'
      path: '/admin/cigars'
      fullPath: '/admin/cigars'
      preLoaderRoute: typeof AdminCigarsImport
      parentRoute: typeof rootRoute
    }
    '/collection/addCigar': {
      id: '/collection/addCigar'
      path: '/collection/addCigar'
      fullPath: '/collection/addCigar'
      preLoaderRoute: typeof CollectionAddCigarImport
      parentRoute: typeof rootRoute
    }
    '/collection/': {
      id: '/collection/'
      path: '/collection'
      fullPath: '/collection'
      preLoaderRoute: typeof CollectionIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin/brands': typeof AdminBrandsRoute
  '/admin/cigars': typeof AdminCigarsRoute
  '/collection/addCigar': typeof CollectionAddCigarRoute
  '/collection': typeof CollectionIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin/brands': typeof AdminBrandsRoute
  '/admin/cigars': typeof AdminCigarsRoute
  '/collection/addCigar': typeof CollectionAddCigarRoute
  '/collection': typeof CollectionIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/admin/brands': typeof AdminBrandsRoute
  '/admin/cigars': typeof AdminCigarsRoute
  '/collection/addCigar': typeof CollectionAddCigarRoute
  '/collection/': typeof CollectionIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin/brands'
    | '/admin/cigars'
    | '/collection/addCigar'
    | '/collection'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin/brands'
    | '/admin/cigars'
    | '/collection/addCigar'
    | '/collection'
  id:
    | '__root__'
    | '/'
    | '/admin/brands'
    | '/admin/cigars'
    | '/collection/addCigar'
    | '/collection/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminBrandsRoute: typeof AdminBrandsRoute
  AdminCigarsRoute: typeof AdminCigarsRoute
  CollectionAddCigarRoute: typeof CollectionAddCigarRoute
  CollectionIndexRoute: typeof CollectionIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminBrandsRoute: AdminBrandsRoute,
  AdminCigarsRoute: AdminCigarsRoute,
  CollectionAddCigarRoute: CollectionAddCigarRoute,
  CollectionIndexRoute: CollectionIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/admin/brands",
        "/admin/cigars",
        "/collection/addCigar",
        "/collection/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/admin/brands": {
      "filePath": "admin/brands.tsx"
    },
    "/admin/cigars": {
      "filePath": "admin/cigars.tsx"
    },
    "/collection/addCigar": {
      "filePath": "collection/addCigar.tsx"
    },
    "/collection/": {
      "filePath": "collection/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
